name: Monorepo PR Workflow

on:
    pull_request:
        branches: [main, master, develop]
        types: [opened, synchronize, reopened]

jobs:
    detect-affected:
        name: Detect Affected Packages
        runs-on: ubuntu-latest
        outputs:
            affected: ${{ steps.set-affected.outputs.affected }}
            affected_apps: ${{ steps.set-affected.outputs.affected_apps }}
            affected_packages: ${{ steps.set-affected.outputs.affected_packages }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Find base commit for comparison
              id: find-base-commit
              run: |
                  BASE_SHA=$(git merge-base ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
                  echo "base_sha=$BASE_SHA" >> $GITHUB_OUTPUT

            - name: Detect affected packages and apps
              id: set-affected
              run: |
                  # Get list of changed files
                  CHANGED_FILES=$(git diff --name-only ${{ steps.find-base-commit.outputs.base_sha }} ${{ github.event.pull_request.head.sha }})

                  # Check if any apps are affected
                  AFFECTED_APPS=""
                  for APP in $(ls -d apps/*/ 2>/dev/null | cut -d'/' -f2); do
                    if echo "$CHANGED_FILES" | grep -q "^apps/$APP/"; then
                      AFFECTED_APPS="$AFFECTED_APPS $APP"
                    fi
                  done
                  AFFECTED_APPS=$(echo $AFFECTED_APPS | xargs)

                  # Check if any packages are affected
                  AFFECTED_PACKAGES=""
                  for PKG in $(ls -d packages/*/ 2>/dev/null | cut -d'/' -f2); do
                    if echo "$CHANGED_FILES" | grep -q "^packages/$PKG/"; then
                      AFFECTED_PACKAGES="$AFFECTED_PACKAGES $PKG"
                    fi
                  done
                  AFFECTED_PACKAGES=$(echo $AFFECTED_PACKAGES | xargs)

                  # Set outputs
                  echo "affected_apps=$AFFECTED_APPS" >> $GITHUB_OUTPUT
                  echo "affected_packages=$AFFECTED_PACKAGES" >> $GITHUB_OUTPUT

                  # Set overall affected flag
                  if [ -n "$AFFECTED_APPS" ] || [ -n "$AFFECTED_PACKAGES" ]; then
                    echo "affected=true" >> $GITHUB_OUTPUT
                  else
                    echo "affected=false" >> $GITHUB_OUTPUT
                  fi

                  # Output for debugging
                  echo "Affected apps: $AFFECTED_APPS"
                  echo "Affected packages: $AFFECTED_PACKAGES"

    build-affected:
        name: Build Affected
        needs: detect-affected
        if: needs.detect-affected.outputs.affected == 'true'
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            # Setup Turborepo cache
            - name: Setup Turborepo cache
              uses: actions/cache@v3
              with:
                  path: .turbo
                  key: ${{ runner.os }}-turbo-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-turbo-

            - name: Build affected packages
              if: needs.detect-affected.outputs.affected_packages != ''
              run: |
                  echo "Building affected packages: ${{ needs.detect-affected.outputs.affected_packages }}"
                  for PKG in ${{ needs.detect-affected.outputs.affected_packages }}; do
                    echo "Building package: $PKG"
                    npm run build --filter=./packages/$PKG
                  done

            - name: Build affected apps
              if: needs.detect-affected.outputs.affected_apps != ''
              run: |
                  echo "Building affected apps: ${{ needs.detect-affected.outputs.affected_apps }}"
                  for APP in ${{ needs.detect-affected.outputs.affected_apps }}; do
                    echo "Building app: $APP"
                    npm run build --filter=./apps/$APP
                  done

            - name: Validate affected packages
              if: needs.detect-affected.outputs.affected_packages != ''
              run: |
                  echo "Validating affected packages: ${{ needs.detect-affected.outputs.affected_packages }}"
                  for PKG in ${{ needs.detect-affected.outputs.affected_packages }}; do
                    echo "Validating package: $PKG"
                    npm run validate --filter=./packages/$PKG
                  done

            - name: Validate affected apps
              if: needs.detect-affected.outputs.affected_apps != ''
              run: |
                  echo "Validating affected apps: ${{ needs.detect-affected.outputs.affected_apps }}"
                  for APP in ${{ needs.detect-affected.outputs.affected_apps }}; do
                    echo "Validating app: $APP"
                    npm run validate --filter=./apps/$APP
                  done
